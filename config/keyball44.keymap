#define DEFAULT 0
#define WIN     1
#define GAME    2
#define MOUSE   3
#define SCROLL  4
#define ARROW   5
#define SYM     6
#define NUM     7

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define KEYS_L   \
     0  1  2  3  4  5    \
    12 13 14 15 16 17    \
    24 25 26 27 28 29    \
    36
#define KEYS_R  \
     6  7  8  9 10 11 \
    18 19 20 21 22 23 \
    30 31 32 33 34 35 \
    43
#define THUMBS_L  \
    37 38 39 40
#define THUMBS_R \
    41 42

&trackball {
    scroll-layers = <SCROLL>;
    snipe-layers = <MOUSE>;

    arrows {
        layers = <ARROW>;
        bindings =
            <&kp RIGHT_ARROW>,
            <&kp LEFT_ARROW>,
            <&kp UP_ARROW>,
            <&kp DOWN_ARROW>;

        tick = <20>;
        wait-ms = <5>;
        tap-ms = <5>;
    };
};

&lt {
    tapping-term-ms = <280>;
    flavor = "balanced";
    quick-tap-ms = <175>;
    hold-trigger-key-positions = <37 38 39 40 41 42>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

&sl { release-after-ms = <400>; };

/ {
    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bkdel: back_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACK_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shtl: shift_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_TAP_LEFT";
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 41 40 39 38 37>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        shtr: shift_tap_right {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            label = "SHIFT_TAP_RIGHT";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        hml: home_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MOD_LEFT";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <210>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 41 40 39 38 37>;
            hold-trigger-on-release;
        };

        hmr: home_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MOD_RIGHT";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <210>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42>;
            hold-trigger-on-release;
        };

        nav: nav {
            compatible = "zmk,behavior-tap-dance";
            label = "NAV";
            #binding-cells = <0>;
            bindings = <&mo 3>, <&mo 4>, <&mo 5>;

            tapping-term-ms = <280>;
        };
    };

    macros {
        mouse_nav: mouse_nav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 3>,
                <&macro_wait_time 5>,
                <&macro_tap>,
                <&sl 0>;

            label = "MOUSE_NAV";
        };

        scroll_nav: scroll_nav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 4>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 4>,
                <&macro_wait_time 5>,
                <&macro_tap>,
                <&sl 0>;

            label = "SCROLL_NAV";
        };

        arrow_nav: arrow_nav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 5>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 5>,
                <&macro_wait_time 5>,
                <&macro_tap>,
                <&sl 0>;

            label = "ARROW_NAV";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAC";
            bindings = <
&caps_word      &kp Q         &kp W            &kp F            &kp P               &kp B              &kp J        &kp L                &kp U             &kp Y             &kp SEMICOLON  &kp DELETE
&kp LEFT_SHIFT  &hml LCTRL A  &hml LEFT_ALT R  &hml LEFT_GUI S  &shtl LEFT_SHIFT T  &kp G              &kp M        &shtr RIGHT_SHIFT N  &hmr RIGHT_GUI E  &hmr RIGHT_ALT I  &hmr RCTRL O   &kp RIGHT_CONTROL
&kp LEFT_GUI    &kp Z         &kp X            &kp C            &kp D               &kp V              &kp K        &kp H                &kp COMMA         &kp PERIOD        &kp SLASH      &mo 3
&kp LEFT_ALT    &kp ESCAPE    &kp TAB          &kp SPACE        &nav                           &bkdel  &lt 6 ENTER                                                                          &mo 4
            >;
        };

        windows_layer {
            label = "WIN";
            bindings = <
&trans            &trans           &trans  &trans        &trans  &trans              &trans  &trans  &trans        &trans  &trans            &trans
&trans            &hml LEFT_GUI A  &trans  &hml LCTRL S  &trans  &trans              &trans  &trans  &hmr RCTRL E  &trans  &hmr RIGHT_GUI O  &kp RIGHT_GUI
&kp LEFT_CONTROL  &trans           &trans  &trans        &trans  &trans              &trans  &trans  &trans        &trans  &trans            &trans
&trans            &trans           &trans  &trans        &trans              &trans  &trans                                                  &trans
            >;
        };

        game_layer {
            label = "GAME";
            bindings = <
&trans            &kp Q   &kp W   &kp E   &kp R   &kp T              &kp Y   &kp U  &kp I      &kp O    &kp P      &trans
&trans            &kp A   &kp S   &kp D   &kp F   &kp G              &kp H   &kp J  &kp K      &kp L    &kp SEMI   &kp RIGHT_GUI
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C   &kp V   &kp B              &kp N   &kp M  &kp COMMA  &kp DOT  &kp SLASH  &trans
&trans            &trans  &trans  &trans  &trans             &trans  &trans                                        &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &kp LEFT      &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT     &none                     &none         &mkp LCLK     &mkp RCLK     &mkp MCLK     &none         &trans
&trans  &kp HOME      &kp PAGE_UP   &kp PAGE_DOWN   &kp END       &none                     &none         &none         &none         &none         &none         &trans
&trans  &trans        &trans        &trans          &trans                          &trans  &lt 7 ENTER                                                           &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        arrow_layer {
            label = "ARROW";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &kp GRAVE        &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp CARET              &kp AT      &kp SINGLE_QUOTE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT    &trans
&trans  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL          &kp AMPS               &kp HASH    &kp COLON         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &trans
&trans  &kp TILDE        &kp PERIOD     &kp SLASH         &kp STAR           &kp PIPE               &kp DOLLAR  &kp UNDER         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH  &trans
&trans  &trans           &trans         &trans            &mo 7                             &trans  &trans                                                                                    &trans
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &tog 2              &kp MINUS   &kp N7        &kp NUMBER_8  &kp NUMBER_9  &out OUT_TOG  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &tog 1              &kp PERIOD  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &bt BT_NXT    &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none               &kp N0      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &bt BT_CLR    &trans
&trans  &trans  &trans   &trans   &trans               &trans  &trans                                                              &trans
            >;
        };
    };
};
